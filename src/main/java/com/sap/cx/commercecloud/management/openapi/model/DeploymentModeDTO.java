/*
 * SAP Commerce Cloud - Management API
 * The API to manage your SAP Commerce environments in the cloud, including provisioning, building releases, deploying, operating and more.
 *
 * OpenAPI spec version: 2.0.11
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sap.cx.commercecloud.management.openapi.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Details of a deploymentmodes per environment
 */
@Schema(description = "Details of a deploymentmodes per environment")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-30T21:55:47.726988+02:00[Europe/Rome]")

public class DeploymentModeDTO {
    @SerializedName("dataMigrationMode")
    private List<DataMigrationModeEnum> dataMigrationMode = null;
    @SerializedName("deploymentMode")
    private List<DeploymentModeEnum> deploymentMode = null;

    public DeploymentModeDTO dataMigrationMode(List<DataMigrationModeEnum> dataMigrationMode) {
        this.dataMigrationMode = dataMigrationMode;
        return this;
    }

    public DeploymentModeDTO addDataMigrationModeItem(DataMigrationModeEnum dataMigrationModeItem) {
        if (this.dataMigrationMode == null) {
            this.dataMigrationMode = new ArrayList<DataMigrationModeEnum>();
        }
        this.dataMigrationMode.add(dataMigrationModeItem);
        return this;
    }

    /**
     * Data migration modes
     *
     * @return dataMigrationMode
     **/
    @Schema(description = "Data migration modes")
    public List<DataMigrationModeEnum> getDataMigrationMode() {
        return dataMigrationMode;
    }

    public void setDataMigrationMode(List<DataMigrationModeEnum> dataMigrationMode) {
        this.dataMigrationMode = dataMigrationMode;
    }

    public DeploymentModeDTO deploymentMode(List<DeploymentModeEnum> deploymentMode) {
        this.deploymentMode = deploymentMode;
        return this;
    }

    public DeploymentModeDTO addDeploymentModeItem(DeploymentModeEnum deploymentModeItem) {
        if (this.deploymentMode == null) {
            this.deploymentMode = new ArrayList<DeploymentModeEnum>();
        }
        this.deploymentMode.add(deploymentModeItem);
        return this;
    }

    /**
     * deployment modes
     *
     * @return deploymentMode
     **/
    @Schema(description = "deployment modes")
    public List<DeploymentModeEnum> getDeploymentMode() {
        return deploymentMode;
    }

    public void setDeploymentMode(List<DeploymentModeEnum> deploymentMode) {
        this.deploymentMode = deploymentMode;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeploymentModeDTO deploymentModeDTO = (DeploymentModeDTO) o;
        return Objects.equals(this.dataMigrationMode, deploymentModeDTO.dataMigrationMode) && Objects.equals(this.deploymentMode, deploymentModeDTO.deploymentMode);
    }

    @Override
    public int hashCode() {
        return Objects.hash(dataMigrationMode, deploymentMode);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DeploymentModeDTO {\n");

        sb.append("    dataMigrationMode: ").append(toIndentedString(dataMigrationMode)).append("\n");
        sb.append("    deploymentMode: ").append(toIndentedString(deploymentMode)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }


    /**
     * Gets or Sets dataMigrationMode
     */
    @JsonAdapter(DataMigrationModeEnum.Adapter.class)
    public enum DataMigrationModeEnum {
        @SerializedName("NONE") NONE("NONE"), @SerializedName("UPDATE") UPDATE("UPDATE"), @SerializedName("INITIALIZE") INITIALIZE("INITIALIZE");

        private String value;

        DataMigrationModeEnum(String value) {
            this.value = value;
        }

        public static DataMigrationModeEnum fromValue(String input) {
            for (DataMigrationModeEnum b : DataMigrationModeEnum.values()) {
                if (b.value.equals(input)) {
                    return b;
                }
            }
            return null;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static class Adapter extends TypeAdapter<DataMigrationModeEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final DataMigrationModeEnum enumeration) throws IOException {
                jsonWriter.value(String.valueOf(enumeration.getValue()));
            }

            @Override
            public DataMigrationModeEnum read(final JsonReader jsonReader) throws IOException {
                Object value = jsonReader.nextString();
                return DataMigrationModeEnum.fromValue((String) (value));
            }
        }
    }

    /**
     * Gets or Sets deploymentMode
     */
    @JsonAdapter(DeploymentModeEnum.Adapter.class)
    public enum DeploymentModeEnum {
        @SerializedName("ROLLING_UPDATE") ROLLING_UPDATE("ROLLING_UPDATE"), @SerializedName("RECREATE") RECREATE("RECREATE"), @SerializedName("GREEN") GREEN("GREEN");

        private String value;

        DeploymentModeEnum(String value) {
            this.value = value;
        }

        public static DeploymentModeEnum fromValue(String input) {
            for (DeploymentModeEnum b : DeploymentModeEnum.values()) {
                if (b.value.equals(input)) {
                    return b;
                }
            }
            return null;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static class Adapter extends TypeAdapter<DeploymentModeEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final DeploymentModeEnum enumeration) throws IOException {
                jsonWriter.value(String.valueOf(enumeration.getValue()));
            }

            @Override
            public DeploymentModeEnum read(final JsonReader jsonReader) throws IOException {
                Object value = jsonReader.nextString();
                return DeploymentModeEnum.fromValue((String) (value));
            }
        }
    }

}
