/*
 * SAP Commerce Cloud - Management API
 * The API to manage your SAP Commerce environments in the cloud, including provisioning, building releases, deploying, operating and more.
 *
 * OpenAPI spec version: 2.0.11
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sap.cx.commercecloud.management.openapi.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;

/**
 * Entity to be used describe a deployment cancelation
 */
@Schema(description = "Entity to be used describe a deployment cancelation")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-30T21:55:47.726988+02:00[Europe/Rome]")

public class DeploymentCancelationDetailDTO {
    @SerializedName("canceledBy")
    private String canceledBy = null;

    @SerializedName("startTimestamp")
    private OffsetDateTime startTimestamp = null;

    @SerializedName("finishedTimestamp")
    private OffsetDateTime finishedTimestamp = null;

    @SerializedName("failed")
    private Boolean failed = null;

    @SerializedName("rollbackDatabase")
    private Boolean rollbackDatabase = null;

    @SerializedName("cancelReason")
    private String cancelReason = null;

    public DeploymentCancelationDetailDTO canceledBy(String canceledBy) {
        this.canceledBy = canceledBy;
        return this;
    }

    /**
     * User that canceled the deployment
     *
     * @return canceledBy
     **/
    @Schema(description = "User that canceled the deployment")
    public String getCanceledBy() {
        return canceledBy;
    }

    public void setCanceledBy(String canceledBy) {
        this.canceledBy = canceledBy;
    }

    public DeploymentCancelationDetailDTO startTimestamp(OffsetDateTime startTimestamp) {
        this.startTimestamp = startTimestamp;
        return this;
    }

    /**
     * Time the cancelation was requested
     *
     * @return startTimestamp
     **/
    @Schema(description = "Time the cancelation was requested")
    public OffsetDateTime getStartTimestamp() {
        return startTimestamp;
    }

    public void setStartTimestamp(OffsetDateTime startTimestamp) {
        this.startTimestamp = startTimestamp;
    }

    public DeploymentCancelationDetailDTO finishedTimestamp(OffsetDateTime finishedTimestamp) {
        this.finishedTimestamp = finishedTimestamp;
        return this;
    }

    /**
     * Time the cancelation finished
     *
     * @return finishedTimestamp
     **/
    @Schema(description = "Time the cancelation finished")
    public OffsetDateTime getFinishedTimestamp() {
        return finishedTimestamp;
    }

    public void setFinishedTimestamp(OffsetDateTime finishedTimestamp) {
        this.finishedTimestamp = finishedTimestamp;
    }

    public DeploymentCancelationDetailDTO failed(Boolean failed) {
        this.failed = failed;
        return this;
    }

    /**
     * Flag to indicate if the deployment cancelation failed
     *
     * @return failed
     **/
    @Schema(description = "Flag to indicate if the deployment cancelation failed")
    public Boolean isFailed() {
        return failed;
    }

    public void setFailed(Boolean failed) {
        this.failed = failed;
    }

    public DeploymentCancelationDetailDTO rollbackDatabase(Boolean rollbackDatabase) {
        this.rollbackDatabase = rollbackDatabase;
        return this;
    }

    /**
     * Optional flag to indicate if the database should be rolled back
     *
     * @return rollbackDatabase
     **/
    @Schema(description = "Optional flag to indicate if the database should be rolled back")
    public Boolean isRollbackDatabase() {
        return rollbackDatabase;
    }

    public void setRollbackDatabase(Boolean rollbackDatabase) {
        this.rollbackDatabase = rollbackDatabase;
    }

    public DeploymentCancelationDetailDTO cancelReason(String cancelReason) {
        this.cancelReason = cancelReason;
        return this;
    }

    /**
     * Reason for cancelling a deployment
     *
     * @return cancelReason
     **/
    @Schema(description = "Reason for cancelling a deployment")
    public String getCancelReason() {
        return cancelReason;
    }

    public void setCancelReason(String cancelReason) {
        this.cancelReason = cancelReason;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeploymentCancelationDetailDTO deploymentCancelationDetailDTO = (DeploymentCancelationDetailDTO) o;
        return Objects.equals(this.canceledBy, deploymentCancelationDetailDTO.canceledBy) && Objects.equals(this.startTimestamp, deploymentCancelationDetailDTO.startTimestamp) && Objects.equals(this.finishedTimestamp, deploymentCancelationDetailDTO.finishedTimestamp) && Objects.equals(this.failed, deploymentCancelationDetailDTO.failed) && Objects.equals(this.rollbackDatabase, deploymentCancelationDetailDTO.rollbackDatabase) && Objects.equals(this.cancelReason, deploymentCancelationDetailDTO.cancelReason);
    }

    @Override
    public int hashCode() {
        return Objects.hash(canceledBy, startTimestamp, finishedTimestamp, failed, rollbackDatabase, cancelReason);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DeploymentCancelationDetailDTO {\n");

        sb.append("    canceledBy: ").append(toIndentedString(canceledBy)).append("\n");
        sb.append("    startTimestamp: ").append(toIndentedString(startTimestamp)).append("\n");
        sb.append("    finishedTimestamp: ").append(toIndentedString(finishedTimestamp)).append("\n");
        sb.append("    failed: ").append(toIndentedString(failed)).append("\n");
        sb.append("    rollbackDatabase: ").append(toIndentedString(rollbackDatabase)).append("\n");
        sb.append("    cancelReason: ").append(toIndentedString(cancelReason)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
