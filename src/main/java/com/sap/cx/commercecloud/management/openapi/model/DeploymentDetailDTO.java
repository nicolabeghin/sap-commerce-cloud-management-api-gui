/*
 * SAP Commerce Cloud - Management API
 * The API to manage your SAP Commerce environments in the cloud, including provisioning, building releases, deploying, operating and more.
 *
 * OpenAPI spec version: 2.0.11
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sap.cx.commercecloud.management.openapi.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.io.IOException;
import java.util.Objects;

/**
 * Details of a deployment
 */
@Schema(description = "Details of a deployment")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-30T21:55:47.726988+02:00[Europe/Rome]")

public class DeploymentDetailDTO {
    @SerializedName("code")
    private String code = null;

    @SerializedName("subscriptionCode")
    private String subscriptionCode = null;

    @SerializedName("createdBy")
    private String createdBy = null;

    @SerializedName("createdTimestamp")
    private OffsetDateTime createdTimestamp = null;

    @SerializedName("buildCode")
    private String buildCode = null;

    @SerializedName("environmentCode")
    private String environmentCode = null;
    @SerializedName("databaseUpdateMode")
    private DatabaseUpdateModeEnum databaseUpdateMode = null;
    @SerializedName("strategy")
    private StrategyEnum strategy = null;
    @SerializedName("scheduledTimestamp")
    private OffsetDateTime scheduledTimestamp = null;
    @SerializedName("deployedTimestamp")
    private OffsetDateTime deployedTimestamp = null;
    @SerializedName("failedTimestamp")
    private OffsetDateTime failedTimestamp = null;
    @SerializedName("undeployedTimestamp")
    private OffsetDateTime undeployedTimestamp = null;
    @SerializedName("status")
    private String status = null;
    @SerializedName("canceledBy")
    private String canceledBy = null;
    @SerializedName("canceledTimestamp")
    private OffsetDateTime canceledTimestamp = null;
    @SerializedName("cancellationFinishedTimestamp")
    private OffsetDateTime cancellationFinishedTimestamp = null;
    @SerializedName("cancellationFailed")
    private Boolean cancellationFailed = null;
    @SerializedName("cancelation")
    private DeploymentCancelationDetailDTO cancelation = null;
    @SerializedName("isCanaryAvailable")
    private Boolean isCanaryAvailable = null;
    @SerializedName("previousDeploymentCode")
    private String previousDeploymentCode = null;
    @SerializedName("expireAtTimestamp")
    private OffsetDateTime expireAtTimestamp = null;
    @SerializedName("canaryStatus")
    private CanaryStatusEnum canaryStatus = null;
    @SerializedName("trafficSplit")
    private DeploymentTrafficSplitDTO trafficSplit = null;

    public DeploymentDetailDTO code(String code) {
        this.code = code;
        return this;
    }

    /**
     * Deployment code
     *
     * @return code
     **/
    @Schema(description = "Deployment code")
    public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public DeploymentDetailDTO subscriptionCode(String subscriptionCode) {
        this.subscriptionCode = subscriptionCode;
        return this;
    }

    /**
     * Code of the subscription
     *
     * @return subscriptionCode
     **/
    @Schema(description = "Code of the subscription")
    public String getSubscriptionCode() {
        return subscriptionCode;
    }

    public void setSubscriptionCode(String subscriptionCode) {
        this.subscriptionCode = subscriptionCode;
    }

    public DeploymentDetailDTO createdBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * User that created the deployment
     *
     * @return createdBy
     **/
    @Schema(description = "User that created the deployment")
    public String getCreatedBy() {
        return createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    public DeploymentDetailDTO createdTimestamp(OffsetDateTime createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }

    /**
     * Deployment creation timestamp
     *
     * @return createdTimestamp
     **/
    @Schema(description = "Deployment creation timestamp")
    public OffsetDateTime getCreatedTimestamp() {
        return createdTimestamp;
    }

    public void setCreatedTimestamp(OffsetDateTime createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
    }

    public DeploymentDetailDTO buildCode(String buildCode) {
        this.buildCode = buildCode;
        return this;
    }

    /**
     * Code of the deployed build
     *
     * @return buildCode
     **/
    @Schema(description = "Code of the deployed build")
    public String getBuildCode() {
        return buildCode;
    }

    public void setBuildCode(String buildCode) {
        this.buildCode = buildCode;
    }

    public DeploymentDetailDTO environmentCode(String environmentCode) {
        this.environmentCode = environmentCode;
        return this;
    }

    /**
     * Code of the environment where the build will be deployed to
     *
     * @return environmentCode
     **/
    @Schema(description = "Code of the environment where the build will be deployed to")
    public String getEnvironmentCode() {
        return environmentCode;
    }

    public void setEnvironmentCode(String environmentCode) {
        this.environmentCode = environmentCode;
    }

    public DeploymentDetailDTO databaseUpdateMode(DatabaseUpdateModeEnum databaseUpdateMode) {
        this.databaseUpdateMode = databaseUpdateMode;
        return this;
    }

    /**
     * Database action used in the deployment
     *
     * @return databaseUpdateMode
     **/
    @Schema(description = "Database action used in the deployment")
    public DatabaseUpdateModeEnum getDatabaseUpdateMode() {
        return databaseUpdateMode;
    }

    public void setDatabaseUpdateMode(DatabaseUpdateModeEnum databaseUpdateMode) {
        this.databaseUpdateMode = databaseUpdateMode;
    }

    public DeploymentDetailDTO strategy(StrategyEnum strategy) {
        this.strategy = strategy;
        return this;
    }

    /**
     * Strategy for the deployment. Could be rolling-update or re-create
     *
     * @return strategy
     **/
    @Schema(description = "Strategy for the deployment. Could be rolling-update or re-create")
    public StrategyEnum getStrategy() {
        return strategy;
    }

    public void setStrategy(StrategyEnum strategy) {
        this.strategy = strategy;
    }

    public DeploymentDetailDTO scheduledTimestamp(OffsetDateTime scheduledTimestamp) {
        this.scheduledTimestamp = scheduledTimestamp;
        return this;
    }

    /**
     * Time the deployment is scheduled for. If not provided current timestamp is used.
     *
     * @return scheduledTimestamp
     **/
    @Schema(description = "Time the deployment is scheduled for. If not provided current timestamp is used.")
    public OffsetDateTime getScheduledTimestamp() {
        return scheduledTimestamp;
    }

    public void setScheduledTimestamp(OffsetDateTime scheduledTimestamp) {
        this.scheduledTimestamp = scheduledTimestamp;
    }

    public DeploymentDetailDTO deployedTimestamp(OffsetDateTime deployedTimestamp) {
        this.deployedTimestamp = deployedTimestamp;
        return this;
    }

    /**
     * Time the deployment was successful
     *
     * @return deployedTimestamp
     **/
    @Schema(description = "Time the deployment was successful")
    public OffsetDateTime getDeployedTimestamp() {
        return deployedTimestamp;
    }

    public void setDeployedTimestamp(OffsetDateTime deployedTimestamp) {
        this.deployedTimestamp = deployedTimestamp;
    }

    public DeploymentDetailDTO failedTimestamp(OffsetDateTime failedTimestamp) {
        this.failedTimestamp = failedTimestamp;
        return this;
    }

    /**
     * Time the deployment failed
     *
     * @return failedTimestamp
     **/
    @Schema(description = "Time the deployment failed")
    public OffsetDateTime getFailedTimestamp() {
        return failedTimestamp;
    }

    public void setFailedTimestamp(OffsetDateTime failedTimestamp) {
        this.failedTimestamp = failedTimestamp;
    }

    public DeploymentDetailDTO undeployedTimestamp(OffsetDateTime undeployedTimestamp) {
        this.undeployedTimestamp = undeployedTimestamp;
        return this;
    }

    /**
     * Time the deployment was un-deployed and replaced
     *
     * @return undeployedTimestamp
     **/
    @Schema(description = "Time the deployment was un-deployed and replaced")
    public OffsetDateTime getUndeployedTimestamp() {
        return undeployedTimestamp;
    }

    public void setUndeployedTimestamp(OffsetDateTime undeployedTimestamp) {
        this.undeployedTimestamp = undeployedTimestamp;
    }

    public DeploymentDetailDTO status(String status) {
        this.status = status;
        return this;
    }

    /**
     * Status of the deployment, possible values are \&quot;SCHEDULED\&quot;,\&quot;DEPLOYING\&quot;,\&quot;DEPLOYED\&quot;,\&quot;UNDEPLOYED\&quot; or \&quot;FAIL\&quot;
     *
     * @return status
     **/
    @Schema(description = "Status of the deployment, possible values are \"SCHEDULED\",\"DEPLOYING\",\"DEPLOYED\",\"UNDEPLOYED\" or \"FAIL\"")
    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public DeploymentDetailDTO canceledBy(String canceledBy) {
        this.canceledBy = canceledBy;
        return this;
    }

    /**
     * User that canceled the deployment. This property was moved under &#x60;cancelation&#x60;.
     *
     * @return canceledBy
     **/
    @Schema(description = "User that canceled the deployment. This property was moved under `cancelation`.")
    public String getCanceledBy() {
        return canceledBy;
    }

    public void setCanceledBy(String canceledBy) {
        this.canceledBy = canceledBy;
    }

    public DeploymentDetailDTO canceledTimestamp(OffsetDateTime canceledTimestamp) {
        this.canceledTimestamp = canceledTimestamp;
        return this;
    }

    /**
     * Time the cancelation was requested. This property was moved under &#x60;cancelation&#x60;.
     *
     * @return canceledTimestamp
     **/
    @Schema(description = "Time the cancelation was requested. This property was moved under `cancelation`.")
    public OffsetDateTime getCanceledTimestamp() {
        return canceledTimestamp;
    }

    public void setCanceledTimestamp(OffsetDateTime canceledTimestamp) {
        this.canceledTimestamp = canceledTimestamp;
    }

    public DeploymentDetailDTO cancellationFinishedTimestamp(OffsetDateTime cancellationFinishedTimestamp) {
        this.cancellationFinishedTimestamp = cancellationFinishedTimestamp;
        return this;
    }

    /**
     * Time the cancelation finished. This property was moved under &#x60;cancelation&#x60;.
     *
     * @return cancellationFinishedTimestamp
     **/
    @Schema(description = "Time the cancelation finished. This property was moved under `cancelation`.")
    public OffsetDateTime getCancellationFinishedTimestamp() {
        return cancellationFinishedTimestamp;
    }

    public void setCancellationFinishedTimestamp(OffsetDateTime cancellationFinishedTimestamp) {
        this.cancellationFinishedTimestamp = cancellationFinishedTimestamp;
    }

    public DeploymentDetailDTO cancellationFailed(Boolean cancellationFailed) {
        this.cancellationFailed = cancellationFailed;
        return this;
    }

    /**
     * Flag to indicate if the deployment cancelation failed. This property was moved under &#x60;cancelation&#x60;.
     *
     * @return cancellationFailed
     **/
    @Schema(description = "Flag to indicate if the deployment cancelation failed. This property was moved under `cancelation`.")
    public Boolean isCancellationFailed() {
        return cancellationFailed;
    }

    public void setCancellationFailed(Boolean cancellationFailed) {
        this.cancellationFailed = cancellationFailed;
    }

    public DeploymentDetailDTO cancelation(DeploymentCancelationDetailDTO cancelation) {
        this.cancelation = cancelation;
        return this;
    }

    /**
     * Get cancelation
     *
     * @return cancelation
     **/
    @Schema(description = "")
    public DeploymentCancelationDetailDTO getCancelation() {
        return cancelation;
    }

    public void setCancelation(DeploymentCancelationDetailDTO cancelation) {
        this.cancelation = cancelation;
    }

    public DeploymentDetailDTO isCanaryAvailable(Boolean isCanaryAvailable) {
        this.isCanaryAvailable = isCanaryAvailable;
        return this;
    }

    /**
     * true if canary is available
     *
     * @return isCanaryAvailable
     **/
    @Schema(description = "true if canary is available")
    public Boolean isIsCanaryAvailable() {
        return isCanaryAvailable;
    }

    public void setIsCanaryAvailable(Boolean isCanaryAvailable) {
        this.isCanaryAvailable = isCanaryAvailable;
    }

    public DeploymentDetailDTO previousDeploymentCode(String previousDeploymentCode) {
        this.previousDeploymentCode = previousDeploymentCode;
        return this;
    }

    /**
     * Code of the previous deployment
     *
     * @return previousDeploymentCode
     **/
    @Schema(description = "Code of the previous deployment")
    public String getPreviousDeploymentCode() {
        return previousDeploymentCode;
    }

    public void setPreviousDeploymentCode(String previousDeploymentCode) {
        this.previousDeploymentCode = previousDeploymentCode;
    }

    public DeploymentDetailDTO expireAtTimestamp(OffsetDateTime expireAtTimestamp) {
        this.expireAtTimestamp = expireAtTimestamp;
        return this;
    }

    /**
     * Time before which user can make decision on the deployment, after the given time deployment will be automatically rejected.
     *
     * @return expireAtTimestamp
     **/
    @Schema(description = "Time before which user can make decision on the deployment, after the given time deployment will be automatically rejected.")
    public OffsetDateTime getExpireAtTimestamp() {
        return expireAtTimestamp;
    }

    public void setExpireAtTimestamp(OffsetDateTime expireAtTimestamp) {
        this.expireAtTimestamp = expireAtTimestamp;
    }

    public DeploymentDetailDTO canaryStatus(CanaryStatusEnum canaryStatus) {
        this.canaryStatus = canaryStatus;
        return this;
    }

    /**
     * Deployment Canary status
     *
     * @return canaryStatus
     **/
    @Schema(description = "Deployment Canary status")
    public CanaryStatusEnum getCanaryStatus() {
        return canaryStatus;
    }

    public void setCanaryStatus(CanaryStatusEnum canaryStatus) {
        this.canaryStatus = canaryStatus;
    }

    public DeploymentDetailDTO trafficSplit(DeploymentTrafficSplitDTO trafficSplit) {
        this.trafficSplit = trafficSplit;
        return this;
    }

    /**
     * Get trafficSplit
     *
     * @return trafficSplit
     **/
    @Schema(description = "")
    public DeploymentTrafficSplitDTO getTrafficSplit() {
        return trafficSplit;
    }

    public void setTrafficSplit(DeploymentTrafficSplitDTO trafficSplit) {
        this.trafficSplit = trafficSplit;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeploymentDetailDTO deploymentDetailDTO = (DeploymentDetailDTO) o;
        return Objects.equals(this.code, deploymentDetailDTO.code) && Objects.equals(this.subscriptionCode, deploymentDetailDTO.subscriptionCode) && Objects.equals(this.createdBy, deploymentDetailDTO.createdBy) && Objects.equals(this.createdTimestamp, deploymentDetailDTO.createdTimestamp) && Objects.equals(this.buildCode, deploymentDetailDTO.buildCode) && Objects.equals(this.environmentCode, deploymentDetailDTO.environmentCode) && Objects.equals(this.databaseUpdateMode, deploymentDetailDTO.databaseUpdateMode) && Objects.equals(this.strategy, deploymentDetailDTO.strategy) && Objects.equals(this.scheduledTimestamp, deploymentDetailDTO.scheduledTimestamp) && Objects.equals(this.deployedTimestamp, deploymentDetailDTO.deployedTimestamp) && Objects.equals(this.failedTimestamp, deploymentDetailDTO.failedTimestamp) && Objects.equals(this.undeployedTimestamp, deploymentDetailDTO.undeployedTimestamp) && Objects.equals(this.status, deploymentDetailDTO.status) && Objects.equals(this.canceledBy, deploymentDetailDTO.canceledBy) && Objects.equals(this.canceledTimestamp, deploymentDetailDTO.canceledTimestamp) && Objects.equals(this.cancellationFinishedTimestamp, deploymentDetailDTO.cancellationFinishedTimestamp) && Objects.equals(this.cancellationFailed, deploymentDetailDTO.cancellationFailed) && Objects.equals(this.cancelation, deploymentDetailDTO.cancelation) && Objects.equals(this.isCanaryAvailable, deploymentDetailDTO.isCanaryAvailable) && Objects.equals(this.previousDeploymentCode, deploymentDetailDTO.previousDeploymentCode) && Objects.equals(this.expireAtTimestamp, deploymentDetailDTO.expireAtTimestamp) && Objects.equals(this.canaryStatus, deploymentDetailDTO.canaryStatus) && Objects.equals(this.trafficSplit, deploymentDetailDTO.trafficSplit);
    }

    @Override
    public int hashCode() {
        return Objects.hash(code, subscriptionCode, createdBy, createdTimestamp, buildCode, environmentCode, databaseUpdateMode, strategy, scheduledTimestamp, deployedTimestamp, failedTimestamp, undeployedTimestamp, status, canceledBy, canceledTimestamp, cancellationFinishedTimestamp, cancellationFailed, cancelation, isCanaryAvailable, previousDeploymentCode, expireAtTimestamp, canaryStatus, trafficSplit);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DeploymentDetailDTO {\n");

        sb.append("    code: ").append(toIndentedString(code)).append("\n");
        sb.append("    subscriptionCode: ").append(toIndentedString(subscriptionCode)).append("\n");
        sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
        sb.append("    createdTimestamp: ").append(toIndentedString(createdTimestamp)).append("\n");
        sb.append("    buildCode: ").append(toIndentedString(buildCode)).append("\n");
        sb.append("    environmentCode: ").append(toIndentedString(environmentCode)).append("\n");
        sb.append("    databaseUpdateMode: ").append(toIndentedString(databaseUpdateMode)).append("\n");
        sb.append("    strategy: ").append(toIndentedString(strategy)).append("\n");
        sb.append("    scheduledTimestamp: ").append(toIndentedString(scheduledTimestamp)).append("\n");
        sb.append("    deployedTimestamp: ").append(toIndentedString(deployedTimestamp)).append("\n");
        sb.append("    failedTimestamp: ").append(toIndentedString(failedTimestamp)).append("\n");
        sb.append("    undeployedTimestamp: ").append(toIndentedString(undeployedTimestamp)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    canceledBy: ").append(toIndentedString(canceledBy)).append("\n");
        sb.append("    canceledTimestamp: ").append(toIndentedString(canceledTimestamp)).append("\n");
        sb.append("    cancellationFinishedTimestamp: ").append(toIndentedString(cancellationFinishedTimestamp)).append("\n");
        sb.append("    cancellationFailed: ").append(toIndentedString(cancellationFailed)).append("\n");
        sb.append("    cancelation: ").append(toIndentedString(cancelation)).append("\n");
        sb.append("    isCanaryAvailable: ").append(toIndentedString(isCanaryAvailable)).append("\n");
        sb.append("    previousDeploymentCode: ").append(toIndentedString(previousDeploymentCode)).append("\n");
        sb.append("    expireAtTimestamp: ").append(toIndentedString(expireAtTimestamp)).append("\n");
        sb.append("    canaryStatus: ").append(toIndentedString(canaryStatus)).append("\n");
        sb.append("    trafficSplit: ").append(toIndentedString(trafficSplit)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Database action used in the deployment
     */
    @JsonAdapter(DatabaseUpdateModeEnum.Adapter.class)
    public enum DatabaseUpdateModeEnum {
        @SerializedName("NONE") NONE("NONE"), @SerializedName("UPDATE") UPDATE("UPDATE"), @SerializedName("INITIALIZE") INITIALIZE("INITIALIZE");

        private String value;

        DatabaseUpdateModeEnum(String value) {
            this.value = value;
        }

        public static DatabaseUpdateModeEnum fromValue(String input) {
            for (DatabaseUpdateModeEnum b : DatabaseUpdateModeEnum.values()) {
                if (b.value.equals(input)) {
                    return b;
                }
            }
            return null;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static class Adapter extends TypeAdapter<DatabaseUpdateModeEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final DatabaseUpdateModeEnum enumeration) throws IOException {
                jsonWriter.value(String.valueOf(enumeration.getValue()));
            }

            @Override
            public DatabaseUpdateModeEnum read(final JsonReader jsonReader) throws IOException {
                Object value = jsonReader.nextString();
                return DatabaseUpdateModeEnum.fromValue((String) (value));
            }
        }
    }


    /**
     * Strategy for the deployment. Could be rolling-update or re-create
     */
    @JsonAdapter(StrategyEnum.Adapter.class)
    public enum StrategyEnum {
        @SerializedName("ROLLING_UPDATE") ROLLING_UPDATE("ROLLING_UPDATE"), @SerializedName("RECREATE") RECREATE("RECREATE"), @SerializedName("GREEN") GREEN("GREEN");

        private String value;

        StrategyEnum(String value) {
            this.value = value;
        }

        public static StrategyEnum fromValue(String input) {
            for (StrategyEnum b : StrategyEnum.values()) {
                if (b.value.equals(input)) {
                    return b;
                }
            }
            return null;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static class Adapter extends TypeAdapter<StrategyEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final StrategyEnum enumeration) throws IOException {
                jsonWriter.value(String.valueOf(enumeration.getValue()));
            }

            @Override
            public StrategyEnum read(final JsonReader jsonReader) throws IOException {
                Object value = jsonReader.nextString();
                return StrategyEnum.fromValue((String) (value));
            }
        }
    }

    /**
     * Deployment Canary status
     */
    @JsonAdapter(CanaryStatusEnum.Adapter.class)
    public enum CanaryStatusEnum {
        @SerializedName("STARTED") STARTED("STARTED"), @SerializedName("SUCCEEDED") SUCCEEDED("SUCCEEDED"), @SerializedName("FAILED") FAILED("FAILED");

        private String value;

        CanaryStatusEnum(String value) {
            this.value = value;
        }

        public static CanaryStatusEnum fromValue(String input) {
            for (CanaryStatusEnum b : CanaryStatusEnum.values()) {
                if (b.value.equals(input)) {
                    return b;
                }
            }
            return null;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static class Adapter extends TypeAdapter<CanaryStatusEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final CanaryStatusEnum enumeration) throws IOException {
                jsonWriter.value(String.valueOf(enumeration.getValue()));
            }

            @Override
            public CanaryStatusEnum read(final JsonReader jsonReader) throws IOException {
                Object value = jsonReader.nextString();
                return CanaryStatusEnum.fromValue((String) (value));
            }
        }
    }

}
